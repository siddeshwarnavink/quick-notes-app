type User {
  id: Int!
  username: String!
  email: String!
}

type AuthData {
  userId: Int!
  token: String!
  user: User
}

type ValidateToken {
  newToken: String!
  user: User
}

type Note {
  id: Int
  title: String!
  content: String
  creator: User
  created_at: String
  updated_at: String
}

type RootQuery {
  loginUser(email: String!, password: String!): AuthData
  verifyLogin(token: String!): ValidateToken
  userNotes: [Note]!
  singleNote(id: Int): Note
}

type RootMutation {
  createUser(username: String!, email: String!, password: String!): User
  editUser(
    userId: Int!
    username: String!
    isAdmin: Boolean
    newPassword: String
  ): User

  createNote(title: String!, content: String): Note
  updateNote(id: Int, title: String!, content: String!): Note
  deleteNote(id: Int): Note
}

schema {
  query: RootQuery
  mutation: RootMutation
}
